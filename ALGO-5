#include<iostream>
using namespace std;
#include<algorithm>
#include<vector>
#include<string.h>
#include<queue>
#define inf 0x3f3f3f3f
struct node{
	int t;//到 哪个点 
	int value;//权值 
};
vector<node> v[20010]; 
int vis[20010]={0},dis[20010]={inf};
void spfa(int s,int n){//基础spfa算法 
	dis[s]=0;
	vis[s]=1;
	queue<int>q;
	q.push(s);
	while(!q.empty()){
		int t=q.front();
		q.pop();
		vis[t]=0;
		for(int i=0;i<v[t].size();i++){
			int tmp=v[t][i].t;
			int l=v[t][i].value;
			if(dis[tmp]>dis[t]+l){
				dis[tmp]=dis[t]+l;
				if(vis[tmp]==0){
					q.push(tmp);
					vis[tmp]=1;
				}
			}
		}
	}
}
int main(){
	int n,m;
	cin>>n>>m;
	memset(vis,0,sizeof(vis));
	memset(dis,inf,sizeof(dis));
	for(int i=1;i<=m;i++){
		int a;
		node s;
		cin>>a>>s.t>>s.value;
		v[a].push_back(s);
	}
	spfa(1,n);
	for(int i=2;i<=n;i++){
		cout<<dis[i]<<endl;
	}
	return 0;
}
