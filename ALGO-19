#include<iostream>
using namespace std;
#include<algorithm>
#include<string.h>
int map[15][15]={0};
int dp[15][15][15][15]={0};
int n;
int main(){
	memset(dp,0,sizeof(dp));
    memset(map,0,sizeof(map));
	cin>>n;
	int a,b,c;
	while(cin>>a>>b>>c){
		if(a==0&&b==0&&c==0)break;
		map[a][b]=c;
	}
    dp[1][1][1][1]=map[1][1];
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            for(int x=1;x<=n;x++){
                for(int y=1;y<=n;y++){
                    if((i+j)!=(x+y))continue;
                    dp[i][j][x][y]=max(max(dp[i][j-1][x-1][y],dp[i-1][j][x-1][y]),max(dp[i][j-1][x][y-1],dp[i-1][j][x][y-1]));
                    if(i==x&&j==y)dp[i][j][x][y]+=map[i][j];
                    else dp[i][j][x][y]+=map[i][j]+map[x][y];
                }
            }
        }
    }
	cout<<dp[n][n][n][n];
    return 0;
}
